#+TITLE: guix-notes Contributing
#+AUTHOR: Peter Polidoro
#+EMAIL: peter@polidoro.io

* Contributing

** Download Guix Repository

#+BEGIN_SRC sh

git clone https://git.savannah.gnu.org/git/guix.git

#+END_SRC

** Bootstrap and Configure Guix

#+BEGIN_SRC sh

cd guix
git pull
guix shell --pure -D guix
./bootstrap
./configure --localstatedir=/var
make
exit

#+END_SRC

** Create Repository Branch

#+BEGIN_SRC sh

git checkout -b PKG

#+END_SRC

** Edit Or Create Guix Package

*** Edit

#+BEGIN_SRC sh

guix edit PKG
# enable guix-devel-mode in emacs
# to indent and highlight properlyy

#+END_SRC

*** Create

#+BEGIN_SRC sh

guix import pypi -r python_pkg
# Copy output and make note of significant dependency (DEP)
guix edit DEP
# enable guix-devel-mode in emacs
# to indent and highlight properlyy

#+END_SRC

** Build Guix Package

#+BEGIN_SRC sh

./pre-inst-env guix build PKG

#+END_SRC

** Size Guix Package

#+BEGIN_SRC sh

./pre-inst-env guix size PKG

#+END_SRC

** Check that dependent packages are not affected

#+BEGIN_SRC sh

./pre-inst-env guix refresh --list-dependent PKG

#+END_SRC

** Lint Guix Package

#+BEGIN_SRC sh

./pre-inst-env guix lint PKG

#+END_SRC

** Test Guix Package

#+BEGIN_SRC sh

./pre-inst-env guix shell --pure PKG -- PKG

#+END_SRC

** Stage and Commit Changes

- Run magit to stage changes and commit
- run yas-minor-mode-on
- run yas-reload-all to reload snippets
- run yas-insert-snippet and choose guix-commit-message-update-package
- C-c C-c to commit
- W to create patch

** Email Patch

- Send email to guix-patches@gnu.org
- Open patch file and copy subject to email, .e.g. "[PATCH] gnu: kicad: Update to 6.0.4."
- Attach patch to email by opening dired, marking patch file, then C-c RET C-a

** Mulitple New Packages that Depend on Each Other

- Add one new package to scm file starting with dependencies
- Stage and commit single package changes
- Create patch file
- Repeat for every new package ending with final dependent package
- Send cover letter to guix-patches@gnu.org with subject “Add [name of final package] and dependencies”
- Wait for NNN@debbugs.gnu.org infomation in confirmation email
- Send one patch per package to NNN@debbugs.gnu.org starting with dependencies

